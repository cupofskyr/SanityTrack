
"use client";

import AISetupAssistant from '@/components/ai-setup-assistant';
import { useState } from 'react';
import { useToast } from "@/hooks/use-toast";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from "@/components/ui/card";
import { Badge } from '@/components/ui/badge';
import { ListTodo, Check, X, Sparkles } from 'lucide-react';
import { Button } from '@/components/ui/button';

type Task = {
    description: string;
    frequency: string;
};

type ManagedTask = Task & {
    id: number;
};

export default function EquipmentPage() {
    const { toast } = useToast();
    const [managedTasks, setManagedTasks] = useState<ManagedTask[]>([]);
    const [suggestedTasks, setSuggestedTasks] = useState<Task[] | null>(null);
    
    const handleTasksSuggested = (tasks: Task[]) => {
        setSuggestedTasks(tasks);
        toast({
            title: "AI Suggestions Ready!",
            description: `The AI has suggested ${tasks.length} tasks. Please review them below.`,
        });
    };

    const handleConfirmTasks = () => {
        if (!suggestedTasks) return;

        const newTasks = suggestedTasks.map((task, index) => ({
            ...task,
            id: (managedTasks.length > 0 ? Math.max(...managedTasks.map(t => t.id)) : 0) + index + 1,
        }));

        setManagedTasks(prevTasks => [...newTasks, ...prevTasks]);
        setSuggestedTasks(null);

        toast({
            title: "Master Task List Updated!",
            description: `${newTasks.length} new recurring tasks have been added.`,
        });
    };

    const handleDiscardTasks = () => {
        setSuggestedTasks(null);
        toast({
            variant: 'secondary',
            title: "Suggestions Discarded",
            description: "The AI-suggested tasks have been discarded.",
        });
    }

    return (
        <div className="space-y-6">
            <AISetupAssistant onTasksSuggested={handleTasksSuggested} />

            {suggestedTasks && (
                <Card>
                    <CardHeader>
                        <CardTitle className="font-headline flex items-center gap-2"><Sparkles className="text-primary" /> Review AI-Suggested Tasks</CardTitle>
                        <CardDescription>
                            Review the tasks generated by the AI. Add them to your master list or discard them.
                        </CardDescription>
                    </CardHeader>
                    <CardContent>
                         <Table>
                            <TableHeader>
                                <TableRow>
                                    <TableHead className="w-[80%]">Task Description</TableHead>
                                    <TableHead>Frequency</TableHead>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                {suggestedTasks.map((task, index) => (
                                <TableRow key={index}>
                                    <TableCell className="font-medium">{task.description}</TableCell>
                                    <TableCell>
                                        <Badge variant="secondary">{task.frequency}</Badge>
                                    </TableCell>
                                </TableRow>
                                ))}
                            </TableBody>
                        </Table>
                    </CardContent>
                    <CardFooter className="flex justify-end gap-2">
                        <Button variant="outline" onClick={handleDiscardTasks}>
                            <X className="mr-2 h-4 w-4"/>
                            Discard
                        </Button>
                        <Button onClick={handleConfirmTasks}>
                            <Check className="mr-2 h-4 w-4"/>
                            Add to Master List
                        </Button>
                    </CardFooter>
                </Card>
            )}

            <Card>
                <CardHeader>
                    <CardTitle className="font-headline flex items-center gap-2"><ListTodo /> Master Task List</CardTitle>
                    <CardDescription>
                        This is the master list of recurring tasks. This list will be used by the Shift Planner to automatically assign duties.
                    </CardDescription>
                </CardHeader>
                <CardContent>
                    <Table>
                        <TableHeader>
                            <TableRow>
                                <TableHead className="w-[80%]">Task Description</TableHead>
                                <TableHead>Frequency</TableHead>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            {managedTasks.length > 0 ? (
                                managedTasks.map((task) => (
                                <TableRow key={task.id}>
                                    <TableCell className="font-medium">{task.description}</TableCell>
                                    <TableCell>
                                        <Badge variant="secondary">{task.frequency}</Badge>
                                    </TableCell>
                                </TableRow>
                                ))
                            ) : (
                                <TableRow>
                                <TableCell colSpan={2} className="text-center h-24">
                                    No tasks in the master list yet. Use the AI Setup Assistant above to generate tasks.
                                </TableCell>
                                </TableRow>
                            )}
                        </TableBody>
                    </Table>
                </CardContent>
            </Card>
        </div>
    );
}
