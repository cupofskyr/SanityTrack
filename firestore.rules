rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /employees/{employeeId} {
      allow get: if request.auth != null &&
                   (request.auth.uid == employeeId ||
                    getUserData().role == 'owner' ||
                    (getUserData().role == 'manager' && getUserData().locationId == resource.data.locationId));
      allow list: if request.auth != null && getUserData().role in ['owner', 'manager'];
      // Writes are handled by secure Cloud Functions
      allow write: if false; 
    }

    match /perksTransactions/{transactionId} {
      allow get, list: if request.auth != null && getUserData().role in ['owner', 'manager'];
      // Transactions are immutable from the client
      allow write: if false;
    }

    match /branding/{ownerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == ownerId && getUserData().role == 'owner';
    }
  }
}