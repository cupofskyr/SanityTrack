
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to get user's role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    // Users can only read/write their own data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Config can be read by any authenticated user, but only written by owners.
    match /appConfig/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && getUserRole(request.auth.uid) == 'Owner';
    }

    // Brand guidelines can only be read/written by the owner.
    match /brandGuidelines/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Marketing opportunities can be read/written by the assigned owner.
    match /marketingOpportunities/{oppId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.forUserId;
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
